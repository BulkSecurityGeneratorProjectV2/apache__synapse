<document>
    <properties>
        <title>Apache Synapse - Mediators Catalog</title>
    </properties>
    <body>
        <section name="Contents">
            <ul>
                <li><a href="#Intro">Introduction</a></li>
                <li><a href="#Categories">Mediator Categories</a></li>
            </ul>
        </section>
        <section name="Introduction" id="Intro">
            <p>
                Mediator is the basic message processing unit in Synapse. A mediator takes an
                input message, carries out some processing on it, and provides an output message.
                Mediators can be linked up and arranged into chains to implement complex message
                flows (sequences). Mediators can manipulate message content (payload), properties,
                headers and if needed can also execute additional tasks such as database lookup,
                service invocation and script execution.
            </p>
            <p>
                Apache Synapse ships with an array of useful mediators that can be used out of the
                box to implement message flows, services and integration patterns. Rest of this
                article describes these mediators in detail, along with their use cases and
                configuration syntax.
            </p>
        </section>
        <section name="Mediator Categories" id="Categories">
            <p>
                Built-in mediators of Synapse can be classified into several groups depending
                on the nature of their functionality and use cases.
            </p>
            <ul>
                <li>
                    Core mediators - Utility mediators that are useful in a variety of scenarios
                </li>
                <li>
                    Filter mediators - Mediators used to filter out messages
                </li>
                <li>
                    Transform mediators - Mediators used to transform message content, headers and
                    attributes
                </li>
                <li>
                    Extension mediators - Mediators used to extend the Synapse mediation engine by
                    plugging in custom developed code
                </li>
                <li>
                    Advanced mediators - Mediators used to implement advanced integration scenarios
                    and patterns
                </li>
            </ul>
            <p>
                Rest of this article is structured according to the above classification. Mediators
                in each section are arranged in the alphabetical order.
            </p>
        </section>
        <section name="Core Mediators" id="CoreMediators">
            <subsection name="Drop Mediator" id="Drop">
                <p>
                    Drop mediator can be used to drop the current message being processed and
                    terminate a message flow. This mediator is configured as follows and it
                    does not take any additional parameters or arguments.
                </p>
                <div class="xmlConf">&lt;drop/&gt;</div>
            </subsection>
            <subsection name="Log Mediator" id="Log">
                <p>
                    Log mediator can be used in any sequence or proxy service to log the messages
                    being mediated. Log entries generated by the log mediator will go into the
                    standard Synapse log files. This can be further configured using the
                    log4j.properties file.
                </p>
                <p>
                    By default the log mediator only logs a minimalistic set of details to avoid
                    the message content being parsed. But if needed it can be configured to log the
                    full message payload, headers and even custom user defined properties. The log
                    mediator configuration takes the following general form.
                </p>
                <div class="xmlConf">&lt;log [level="simple|full|headers|custom"] [separator="string"]
                    [category="INFO|DEBUG|WARN|ERROR|TRACE|FATAL"]&gt;
    &lt;property name="string" (value="literal" | expression="xpath")/&gt;*
&lt;/log&gt;</div>
                <p>
                    The 'level' attribute is used to specify how much information should be logged
                    by the log mediator. This attribute can take one of following four values.
                </p>
                <ul>
                    <li>
                        simple - Logs a set of standard headers (To, From, WSAction, SOAPAction,
                        ReplyTo and MessageID). If no log level is specified, this level will be
                        used by default.
                    </li>
                    <li>
                        full - Logs all standard headers logged in the log level 'simple' and also
                        the full payload of the message. This log level causes the message content
                        to be parsed and hence incurs a performance overhead.
                    </li>
                    <li>
                        headers - Logs all SOAP header blocks
                    </li>
                    <li>
                        custom - Only logs the user defined properties (see the next section)
                    </li>
                </ul>
                <p>
                    Users can define custom attributes and properties to be logged by the log mediator
                    by specifying some 'property' elements. Each property must be named, and can
                    have a constant value or an XPath expression. If a constant value is specified,
                    that value will be logged with each and every entry logged by the mediator. If
                    an XPath is specified instead, that XPath will be evaluated on the message being
                    mediated and the outcome will be included in the generated log entry.
                </p>
                <p>
                    By default all properties and attributes logged by the log mediator are separated
                    by commas (,). This can be configured using the 'separator' attribute. Further
                    all logs generated by the mediator are logged at log4j log level 'INFO' by default.
                    This behavior can also be configured using the 'category' attribute.
                </p>
            </subsection>
        </section>
    </body>
</document>