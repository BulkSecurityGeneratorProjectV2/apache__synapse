<?xml version="1.0" encoding="ISO-8859-1" ?>
<!--
  ~  Licensed to the Apache Software Foundation (ASF) under one
  ~  or more contributor license agreements.  See the NOTICE file
  ~  distributed with this work for additional information
  ~  regarding copyright ownership.  The ASF licenses this file
  ~  to you under the Apache License, Version 2.0 (the
  ~  "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~
  ~   http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~  Unless required by applicable law or agreed to in writing,
  ~  software distributed under the License is distributed on an
  ~   * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~  KIND, either express or implied.  See the License for the
  ~  specific language governing permissions and limitations
  ~  under the License.
  -->

<document>
    <properties>
        <title>Apache Synapse - Sample 853</title>
    </properties>
    <body>
        <section name="Sample 853: Introduction to Synapse Scatter-Gather eip function template">
            <div class="xmlConf">&lt;!-- Introduction to Synapse Scatter-Gather eip function template --&gt;
&lt;definitions xmlns="http://ws.apache.org/ns/synapse"&gt;
&lt;import xmlns="http://ws.apache.org/ns/synapse" name="EipLibrary" package="synapse.lang.eip" /&gt;
&lt;sequence name="enr"&gt;
        &lt;log level="custom"&gt;
            &lt;property name="text" value="seqhit"/&gt;
        &lt;/log&gt;
        &lt;enrich&gt;
            &lt;source xmlns:m1="http://services.samples/xsd" xmlns:m0="http://services.samples" clone="true" xpath="//m0:return[not(preceding-sibling::m0:return/m1:last &lt;= m1:last) and not(following-sibling::m0:return/m1:last &lt; m1:last)]"/&gt;
            &lt;target type="body"/&gt;
        &lt;/enrich&gt;
        &lt;send/&gt;
    &lt;/sequence&gt;
    &lt;sequence name="main"&gt;
        &lt;call-template target="synapse.lang.eip.scatter_gather"&gt;
            &lt;with-param name="sequence_ref" value="enr"/&gt;
            &lt;with-param xmlns:m0="http://services.samples" name="aggregator_exp" value="{{//m0:return}}"/&gt;
            &lt;with-param name="oncomplete_seq_enabled" value="true"/&gt;
            &lt;with-param name="recipient_list" value="http://localhost:9001/services/SimpleStockQuoteService,http://localhost:9002/services/SimpleStockQuoteService,http://localhost:9003/services/SimpleStockQuoteService"/&gt;
        &lt;/call-template&gt;
    &lt;/sequence&gt;
&lt;/definitions&gt;</div>
            <subsection name="Objective">
                <p>
This sample is an introduction to Synapse Scatter-Gather eip function template. Scatter-Gather pattern broadcasts a message to multiple recipients and re-aggregates the responses back into a single message and send back to client or mediates to the defined target sequence.
                </p>
            </subsection>
            <subsection name="Pre-requisites">
                <p>
                    <ul>
                        <li>
                            Start three instances of sample Axis2 server on HTTP ports 9001,9002,9003. And deploy the SimpleStockQuoteService in all of them.
                        </li>
                        <li>
                            Deploy the SimpleStockQuoteService in the sample Axis2 server and start Axis2
                        </li>
                        <li>
                            Start Synapse using the configuration numbered 853 (repository/conf/sample/synapse_sample_853.xml)
                            <div class="command">
                                Unix/Linux: sh synapse.sh -sample 853<br/>
                                Windows: synapse.bat -sample 853
                            </div>
                        </li>
                    </ul>
                </p>
            </subsection>
            <subsection name="Executing the Client">
<p>
In this sample, the message sent to Synapse will be broadcast to the specified recipients. Then aggregates replies and mediates to the defined target sequence which filter the response which contains the best quote and send back to the client.
</p> 
<p>
                    Invoke the client as follows.
                </p>
                <div class="command">ant stockquote -Dtrpurl=http://localhost:8280/</div>

            </subsection>
        </section>
        <p><a href="../samples.html">Back to Catalog</a></p>        
    </body>
</document>
